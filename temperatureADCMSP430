;-------------------------------------------------------------------------------
; MSP430 Assembler Code Template for use with TI Code Composer Studio
;
;
;-------------------------------------------------------------------------------
            .cdecls C,LIST,"msp430.h"       ; Include device header file
            
;-------------------------------------------------------------------------------
            .def    RESET                   ; Export program entry-point to
                                            ; make it known to linker.
;-------------------------------------------------------------------------------
			.data
SineTable:	.space 100

            .text                           ; Assemble into program memory.
            .retain                         ; Override ELF conditional linking
                                            ; and retain current section.
            .retainrefs                     ; And retain any sections that have
                                            ; references to current section.

;-------------------------------------------------------------------------------
RESET       mov.w   #__STACK_END,SP         ; Initialize stackpointer
StopWDT     mov.w   #WDTPW|WDTHOLD,&WDTCTL  ; Stop watchdog timer


;-------------------------------------------------------------------------------
; Main loop here
;-------------------------------------------------------------------------------
			bis.w	#INCH_10, &ADC10CTL1
			;bis.b	#BIT0, &ADC10AE0
			mov.b	#0, R14

			bis.w	#SREF_1, &ADC10CTL0
			bis.w	#ADC10DIV_3, &ADC10CTL1
			bis.w	#BIT5, &ADC10CTL0
			bis.w	#ADC10SHT_3, &ADC10CTL0
			bis.w	#ADC10SSEL_0, &ADC10CTL1
			bis.w	#CONSEQ_2, &ADC10CTL1

			bis.w	#SHS_2, &ADC10CTL1

			mov.b   &CALBC1_1MHZ, &BCSCTL1
			mov.b	&CALDCO_1MHZ, &DCOCTL

			bis.w	#TASSEL_2 + MC_1, &TA0CTL

			bis.w	#OUTMOD_4, &TA0CCTL0
			;bis.b	#DIVS_3, &BCSCTL2
			;bis.w	#ID_3, &TA0CTL

			mov.w	#40, &TA0CCR0

			bis.w   #BIT3+BIT4, &ADC10CTL0
			bic.w   #ENC, &ADC10CTL0
			bis.w   #ENC, &ADC10CTL0
			bis.w	#GIE, SR
loop:
			jmp loop

ISR:
			cmp.b	#102, R14
			jge		RES
			mov.w   &ADC10MEM, SineTable(R14)
			incd.w	R14
			jmp return
RES:
			mov.b	#0, R14
return:
			reti

;-------------------------------------------------------------------------------
; Stack Pointer definition
;-------------------------------------------------------------------------------
            .global __STACK_END
            .sect   .stack
            
;-------------------------------------------------------------------------------
; Interrupt Vectors
;-------------------------------------------------------------------------------
            .sect   ".reset"                ; MSP430 RESET Vector
            .short  RESET
            
            .sect   ".int05"
            .short  ISR


